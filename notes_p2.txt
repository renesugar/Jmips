PUT THE DIFFERENT CASES IN

tester.java

so far can pass some test cases: (3/13)

1-PrintLiteral.java
2-Add.java
3-Call.java


----------------------------------------

can assign to integers
can print int literals
can print int variables
can print expressions with int literals
can print expressions with int variables

class Easy
{
    public static void main(String[] args)
    {
        int a;
        int b;
        int c;
        int d;

        a = 1;
        b = 2;
        c = 2;
        System.out.println(1);      //   1
        System.out.println(a);      //   1
        System.out.println(2 - 3);  //  -1
        System.out.println(2 + 3);  //   5
        System.out.println(2 * 3);  //   6
        System.out.println(c - 5);  //  -3
        System.out.println(c + 5);  //   7
        System.out.println(c * 5);  //   10
        System.out.println(5 - c);  //   3
        System.out.println(5 + c);  //   7
        System.out.println(5 * c);  //   10
        System.out.println(a - b);  //  -1
        System.out.println(a + b);  //   3
        System.out.println(a * b);  //   2
        System.out.println(c - b);  //   0
        System.out.println(c + b);  //   4
        System.out.println(c * b);  //   4

        d = 6 + 5;
        d = d + 1;
        System.out.println(d);  //  12

        d = a + b;
        d = d + c;
        System.out.println(d);  //  5
    }
}

----------------------------------------

can do less than in branch/loop
can do if branch
can do nested if branch
can do while loops
can do nested while loops

class Medium
{
    public static void main(String[] args)
    {
        boolean a; boolean b;
        boolean c; boolean d;
        int low; int high; int tmp;

        a = true;   b = true;
        c = false;  d = false;

        // IF BRANCHES

        if (true)   { System.out.println(1); } else { System.out.println(0); }  //  1  //  TRUE  = true
        if (false)  { System.out.println(1); } else { System.out.println(0); }  //  0  //  FALSE = false

        if (a)  { System.out.println(1); } else { System.out.println(0); }  //  1  //  TRUE  = true
        if (c)  { System.out.println(1); } else { System.out.println(0); }  //  0  //  FALSE = false

        if (low  < high) { System.out.println(1); } else { System.out.println(0); }  //  1  //  TRUE  = 1 < 1024
        if (high < low)  { System.out.println(1); } else { System.out.println(0); }  //  0  //  FALSE = 1024 < 1

        if(c) {
            System.out.println(0);
            if (b)  { System.out.println(1); } else { System.out.println(2); }
        }
        else {
            System.out.println(3);                                                  // 3
            if (d)  { System.out.println(4); } else { System.out.println(5); }      // 5
        }

        // WHILE LOOPS

        low = 1;    high = 1024;    tmp = 0;

        // print 1, 2, 4, 8, 16, ... , 1024
        while ( low < high ) { System.out.println(low); low = low * 2; }

        // print 1, 2, 4, 8, 16, ... , 1024 ; 1024 times
        while ( tmp < high ) {
            while ( low < high ) { System.out.println(low); low = low * 2; }
            tmp = tmp + 1;
            low = 1;
        }
    }
}

----------------------------------------

and expressions work
not expressions work

class Medium2
{
    public static void main(String[] args)
    {
        boolean a;
        boolean b;

        a = true;
        b = false;

        // NOT
        if (!true)  { System.out.println(1); } else { System.out.println(0); }  //  0  //  FALSE = not true
        if (!false) { System.out.println(1); } else { System.out.println(0); }  //  1  //  TRUE  = not false

        if (!a) { System.out.println(1); } else { System.out.println(0); }  //  0  //  FALSE = not true
        if (!b) { System.out.println(1); } else { System.out.println(0); }  //  1  //  TRUE  = not false

        // AND
        if (true  && true)  { System.out.println(1); } else { System.out.println(0); }  //  1  //  TRUE  = true  && true
        if (false && false) { System.out.println(1); } else { System.out.println(0); }  //  0  //  FALSE = true  && false
        if (false && true)  { System.out.println(1); } else { System.out.println(0); }  //  0  //  FALSE = false && true
        if (false && false) { System.out.println(1); } else { System.out.println(0); }  //  0  //  FALSE = false && false

        if (a && true)  { System.out.println(1); } else { System.out.println(0); }  //  1  //  TRUE  = true  && true
        if (a && false) { System.out.println(1); } else { System.out.println(0); }  //  0  //  FALSE = true  && false
        if (b && true)  { System.out.println(1); } else { System.out.println(0); }  //  0  //  FALSE = false && true
        if (b && false) { System.out.println(1); } else { System.out.println(0); }  //  0  //  FALSE = false && false

        if (true  && a) { System.out.println(1); } else { System.out.println(0); }  //  1  //  TRUE  = true  && true
        if (true  && b) { System.out.println(1); } else { System.out.println(0); }  //  0  //  FALSE = true  && false
        if (false && a) { System.out.println(1); } else { System.out.println(0); }  //  0  //  FALSE = false && true
        if (false && b) { System.out.println(1); } else { System.out.println(0); }  //  0  //  FALSE = false && false

        if (a && a) { System.out.println(1); } else { System.out.println(0); }  //  1  //  TRUE  = true  && true
        if (a && b) { System.out.println(1); } else { System.out.println(0); }  //  0  //  FALSE = true  && false
        if (b && a) { System.out.println(1); } else { System.out.println(0); }  //  0  //  FALSE = false && true
        if (b && b) { System.out.println(1); } else { System.out.println(0); }  //  0  //  FALSE = false && false
    }
}

----------------------------------------

class Hard
{
    public static void main(String[] args)
    {
        int a;

        a = 5;
        System.out.println( new Aux.f_idt( a ) );
        System.out.println( new Aux.f_inc( a ) );
        System.out.println( new Aux.f_dec( a ) );
        System.out.println( new Aux.f_dub( a ) );
        System.out.println( new Aux.f_sqr( a ) );
    }
}

class Aux
{
    int f_idt (int b) { return b; }

    int f_inc (int b) { return b+1; }

    int f_dec (int b) { return b-1; }

    int f_dub (int b) { return b*2; }

    int f_sqr (int b) { return b*b; }
}

----------------------------------------

class Main_Class
{
    public static void main(String[] str_arg) {
        System.out.println(1);
    }
}

class A {
    int x;
    public int f(int a, int b){
        int c;
        c = b + a;
        return a;
    }
}

class B extends A {
    public int g(int b){
        return b;
    }
}

class C extends B {
    public int g(int c){
        return c;
    }
}

class D extends C {
    int y;
    public int f(int d){
        return d;
    }
}

----------------------------------------

class Tester
{
    public static void main(String[] args)
    {
        A as;
        as = new A();

        // val = as.f(1,2);
        // System.out.println(val);

        // as.x = 1;    // ERROR
        // System.out.println(as.x);
    }
}

class A
{
    int x;
    int my_int;
    boolean my_bool;

    public int f(int a, int b)
    {
        int c;
        c = b + a;
        // return 5;   // broken if returns a literal
        return c;
    }

    public boolean setX(int y)
    {
        x = y;
        my_bool = true;
        // return true;   // broken if returns a literal
        return my_bool;
    }
}

class B extends A
{
    int k;
    boolean bbb;

    public boolean setK(int w)
    {
        k = w;
        bbb = true;
        // return true;   // broken if returns a literal
        return bbb;
    }
}