cs132.vapor.ast layout

The visitor is based on the VInstr interface
The VInstr nodes have visit functions

VaporProgram
Node
    VMemRef
        Global
        Stack
    VOperand
        Static
            VLitInt
            VLabelRef
        VLitStr
        VVarRef
            Register
            Local
    VInstr **
        VAssign
        VBranch
        VBuiltIn
        VCall
        VGoto
        VMemRead
        VMemWrite
        VReturn
    VTarget
        VAddr
        VCodeLabel
        VDataSegment
        VFunction

//----------------------------------------


success:

func Main()
	x = 4
	PrintIntS(x)
	ret


success: but vars are backwards ***

func Main()
	x = 4
	y = 5
	z = Add(x y)
	PrintIntS(z)
	ret


success: 1-Basic.vapor

func Main()
	x = 4
	y = Add(x 2)
	PrintIntS(y)
	ret


fail: 2-Loop.vapor ***

func Main()
	x = 1
	goto :end
	begin:
		PrintIntS(x)
		x = MulS(x 2)
	end:
		diff = LtS(x 100)
		if diff goto :begin
	ret
