const empty_LS

func Main [in 0, out 0, local 0]
  $t8 = HeapAllocZ(8)
  if $t8 goto :null1
  Error("null pointer")
null1:
  $a0 = $t8
  $a1 = 10
  call :LS.Start
  $t7 = $v0
  PrintIntS($t7)
  ret

func LS.Start [in 0, out 0, local 0]
  $t6 = $a0
  $t8 = $a1
  $a0 = $t6
  $a1 = $t8
  call :LS.Init
  $t7 = $v0
  $a0 = $t6
  call :LS.Print
  $t8 = $v0
  PrintIntS(9999)
  $a0 = $t6
  $a1 = 8
  call :LS.Search
  $t7 = $v0
  PrintIntS($t7)
  $a0 = $t6
  $a1 = 12
  call :LS.Search
  $t8 = $v0
  PrintIntS($t8)
  $a0 = $t6
  $a1 = 17
  call :LS.Search
  $t7 = $v0
  PrintIntS($t7)
  $a0 = $t6
  $a1 = 50
  call :LS.Search
  $t8 = $v0
  PrintIntS($t8)
  $v0 = 55
  ret

func LS.Print [in 0, out 0, local 0]
  $t6 = $a0
  $t8 = 1
while1_top:
  $t7 = [$t6+4]
  $t5 = LtS($t8 $t7)
  if0 $t5 goto :while1_end
  $t7 = [$t6]
  if $t7 goto :null2
  Error("null pointer")
null2:
  $t5 = [$t7]
  $t5 = Lt($t8 $t5)
  if $t5 goto :bounds1
  Error("array index out of bounds")
bounds1:
  $t5 = MulS($t8 4)
  $t5 = Add($t5 $t7)
  $t6 = [$t5+4]
  PrintIntS($t6)
  $t8 = Add($t8 1)
  goto :while1_top
while1_end:
  $v0 = 0
  ret

func LS.Search [in 0, out 0, local 0]
  $t5 = $a0
  $t2 = $a1
  $t8 = 1
  $t7 = 0
  $t6 = 0
while2_top:
  $t4 = [$t5+4]
  $t3 = LtS($t8 $t4)
  if0 $t3 goto :while2_end
  $t4 = [$t5]
  if $t4 goto :null3
  Error("null pointer")
null3:
  $t3 = [$t4]
  $t3 = Lt($t8 $t3)
  if $t3 goto :bounds2
  Error("array index out of bounds")
bounds2:
  $t3 = MulS($t8 4)
  $t3 = Add($t3 $t4)
  $t4 = [$t3+4]
  $t3 = Add($t2 1)
  $t1 = LtS($t4 $t2)
  if0 $t1 goto :if1_else
  $t2 = 0
  goto :if1_end
if1_else:
  $t1 = LtS($t4 $t3)
  if $t1 goto :if2_else
  $t2 = 0
  goto :if2_end
if2_else:
  $t7 = 1
  $t6 = 1
  $t8 = [$t5+4]
if2_end:
if1_end:
  $t8 = Add($t8 1)
  goto :while2_top
while2_end:
  $v0 = $t6
  ret

func LS.Init [in 0, out 0, local 0]
  $t7 = $a0
  $t8 = $a1
  [$t7] = $t8
  $a0 = $t8
  call :AllocArray
  $t6 = $v0
  [$t7] = $t6
  $t8 = 1
  $t6 = [$t7+4]
  $t5 = Add($t6 1)
while3_top:
  $t6 = [$t7+4]
  $t4 = LtS($t8 $t6)
  if0 $t4 goto :while3_end
  $t6 = MulS(2 $t8)
  $t4 = Sub($t5 3)
  $t3 = [$t7]
  if $t3 goto :null4
  Error("null pointer")
null4:
  $t7 = [$t3]
  $t7 = Lt($t8 $t7)
  if $t7 goto :bounds3
  Error("array index out of bounds")
bounds3:
  $t7 = MulS($t8 4)
  $t7 = Add($t7 $t3)
  $t3 = Add($t6 $t4)
  [$t7] = $t3
  $t8 = Add($t8 1)
  $t5 = Sub($t5 1)
  goto :while3_top
while3_end:
  $v0 = 0
  ret

func AllocArray [in 0, out 0, local 0]
  $t8 = $a0
  $t7 = MulS($t8 4)
  $t7 = Add($t7 4)
  $t6 = HeapAllocZ($t7)
  [$t6] = $t8
  $v0 = $t6
  ret


